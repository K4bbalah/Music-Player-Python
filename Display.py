from Butoes import*
import base64







class DisplayPlayer(ButõesPlayer):
    gg=0
    contador_master=0
    contador=0


  
  
    minuto=0
    segundos=0
    segundos1=0
    minuto1=0
    def Tela(self):
        self.root.configure(bg="orchid4")
        self.play1=PhotoImage(data=base64.b64decode(self.play2))
        self.play1= self.play1.subsample(5,7)
        self.next1=PhotoImage(data=base64.b64decode(self.next2))
        self.next1= self.next1.subsample(5,7)
        self.voltar1=PhotoImage(data=base64.b64decode(self.voltar2))
        self.voltar1= self.voltar1.subsample(5,7)
        self.pausar1=PhotoImage(data=base64.b64decode(self.pausar2))
        self.pausar1= self.pausar1.subsample(5,7)
        self.continuar1=PhotoImage(data=base64.b64decode(self.continuar2))
        self.continuar1= self.continuar1.subsample(5,7)
        self.auto1=PhotoImage(data=base64.b64decode(self.auto2))
        self.auto1= self.auto1.subsample(5,7)
        self.stop1=PhotoImage(data=base64.b64decode(self.stop2))
        self.stop1= self.stop1.subsample(5,7)
        self.mais1=PhotoImage(data=base64.b64decode(self.mais2))
        self.mais1= self.mais1.subsample(5,7)
        self.menos1=PhotoImage(data=base64.b64decode(self.menos2))
        self.menos1= self.menos1.subsample(5,7)
    













      
        self.root.resizable(height=False , width=False)
        self.Frame_Player()
      
      
    

        
    def Frame_Player(self):
        self.frame_1=atk.Frame3d(self.root,bg="black")
        self.frame_1.place(x=0,y=0,width=399,height=345)
        self.frame_3=Frame(self.frame_1,bg="black")
        self.frame_3.place(x=4,y=8,width=391,height=100)
        self.frame_4=Frame(self.root,bg="gray")
        self.frame_4.place(x=5,y=350,width=389,height=147)
        self.frame_2=atk.Frame3d(self.frame_4,bg="gray")
        self.frame_2.place(relx=0.0,rely=0.0,relwidth=1.0,relheight=1.0)
        self.butão()
        self.lab4()
        self.label2()
        self.lab3()
        self.Lab1()
        self.label()
        self.Time_Musica()
      
    '''>>>>>>> Os botões da parte debaixo <<<<<<'''
    
    def Lab1(self):
        self.l=Label(self.frame_2,text="Volume:",bg="gray",fg="black",font=('Helvetica bold',11))
        self.l.place(x=275,y=50,width=60,height=20)
        self.playla=Label(self.frame_2,text="Play",font=('Helvetica bold',11),bg="gray",fg="black")
        self.playla.place(x=170,y=75,width=50,height=20)
        self.pausarla=Label(self.frame_2,text="Pausar",font=('Helvetica bold',11),bg="gray",fg="black")
        self.pausarla.place(x=135,y=8,width=50,height=20)
        self.pausarla=Label(self.frame_2,text="Continuar",font=('Helvetica bold',11),bg="gray",fg="black")
        self.pausarla.place(x=195,y=8,width=75,height=20)
        self.voltarla=Label(self.frame_2,text="Voltar",font=('Helvetica bold',11),bg="gray",fg="black")
        self.voltarla.place(x=95,y=75,width=75,height=20)
        self.voltarla=Label(self.frame_2,text="Avançar",font=('Helvetica bold',11),bg="gray",fg="black")
        self.voltarla.place(x=220,y=75,width=75,height=20)
        self.voltarla=Label(self.frame_2,text="Auto",font=('Helvetica bold',11),bg="gray",fg="black")
        self.voltarla.place(x=55,y=80,width=35,height=20)
        self.voltarla=Label(self.frame_2,text="Stop",font=('Helvetica bold',11),bg="gray",fg="black")
        self.voltarla.place(x=55,y=30,width=35,height=20)
    
    
    
    
    
    def lab3(self):
        self.ss=Label(self.frame_3,text=self.musica[0],bg="black",fg="#dde",font=('Helvetica bold',11))
        self.ss.place(x=0,y=10,width=380,height=60)
    
    def lab4(self):
        self.vv=Label(self.frame_1,text=self.vol,bg="black",fg="#dde",font=('Helvetica bold',15))
        self.vv.place(x=358,y=280,width=36,height=40)
    
 

    
    def label(self):
        self.img1=PhotoImage(file="./imagens/"+self.imgalbum[self.av])
    
        self.gif_label=Label(self.frame_1,bg="black",image=self.img1)
        self.gif_label.place(relx=0.13,rely=0.19,relheight=0.7,relwidth=0.75)
    





    def label2(self):
        self.automatico=Label(self.frame_2,bg="gray")
        self.automatico.place(x=4,y=110,height=30,width=55)







    def Auto_led(self):
        self.automatico.configure(text="Ligado",fg="Skyblue",font=('Helvetica bold',11))
        self.stop_led2=self.root.after(500,self.Auto_led2)
    def Auto_led2(self):
        self.automatico.configure(text="")
        self.stop_led=self.root.after(500,self.Auto_led)
    def Auto_ledstop(self):
        self.root.after_cancel(self.stop_led)
        self.root.after_cancel(self.stop_led2)

    def Auto_image(self):
        if self.contador_master==0:
            self.contador+=20
            self.ss.place(width=self.contador)
            if self.contador==1000:
                self.contador_master=1
        if self.contador_master==1:
            self.contador-=20
            self.ss.place(width=self.contador)
            if self.contador==0:
                self.contador_master=0


        self.stopimg=self.root.after(200,self.Auto_image)

   
    def Stop_Autoimg(self):
        self.root.after_cancel(self.stopimg)
    



    '''>>>>>> O tempo de cada musica começa no codigo abaixo <<<<<

    '''

    def Time_Musica(self):
        self.minutolab=Label(self.frame_1,text="0",font=('Helvetica bold',15),bg="black",fg="#dde")
        self.minutolab.place(x=173,y=310,width=20,height=30)
        self.minutolab1=Label(self.frame_1,text="0",font=('Helvetica bold',15),bg="black",fg="#dde")
        self.minutolab1.place(x=157,y=310,width=20,height=30)
        self.separadorlab=Label(self.frame_1,text=":",font=('Helvetica bold',16),fg="#dde",bg="black")
        self.separadorlab.place(x=193,y=312,width=10,height=28)
        self.segundolab1=Label(self.frame_1,text="0",font=('Helvetica bold',15),fg="#dde",bg="black")
        self.segundolab1.place(x=205,y=310,width=20,height=30)
        self.segundolab2=Label(self.frame_1,text="0",font=('Helvetica bold',15),fg="#dde",bg="black")
        self.segundolab2.place(x=221,y=310,width=20,height=30)


    def Loop_Time(self):

        self.segundos+=1
        if self.segundos==10:
            self.segundos=0
            self.segundos1+=1
        if self.segundos1==6:
            self.segundos1=0
            self.minuto+=1
        if self.minuto==10:
            self.minuto=0
            self.minuto1+=1
        if self.minuto1==6:
            self.minuto1=0
        self.segundolab2.configure(text=self.segundos)
        self.segundolab1.configure(text=self.segundos1)
        self.minutolab.configure(text=self.minuto)
        self.minutolab1.configure(text=self.minuto1)
        self.stoptimemusica=self.root.after(1000,self.Loop_Time)

    def Stop_Timem(self):
        self.root.after_cancel(self.stoptimemusica)
    

    def imagens_codificadas(self):
        self.play2='iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAMAAAD04JH5AAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAfuWmAGgAAAKR0Uk5TAAMeMyUHCoHd7uSmMXb4/ocdARLL/NJjDt73vEUG36AsAuCAGc5bDPW2PgXqmSbbdRX6x1IJ8q43BOeQIf3XaxHBSwjwMOOGHGH2ukPtnip9GPvMWQv0tDyW2nIU+cZQ8aw15o0g1mgQV5xTkw3RWnqdLr5GE+iDp07cFuyMsDtV4XQa75cruULTXeV8n8BI2GXphSKqNshtF48nscnNVmzicDKqFwEWAAAAAWJLR0SlLrlKLwAAAAlwSFlzAAAAygAAAMoBawMUsgAAAldJREFUeNrtmolXjFEYxmcy1EzMNagYlBSVpRJl/YpUMhRaqGiRLfu+L0lkK6Jkye75Q02dDsdBM9937v2e0znv7x94f+d8997nvff9PB5BEARBEARBEARBEKYC3oRpvunE+jMSk/yB5JlemsCsIAAVmB2aw6k/dx7GSUlNm08RCC3ABOGFixYzBNLxC3/GkkyqANTSrGyqQHQpLFueQxUAcvNWrKQKAKtW57u4Jf8hAFVQuIYqABStXVdMFQBK1m/YSBUANm3e4sZS+L8ArNKyrVQBILitfDtVAKhIrjQc1DEEoKp2VBtdCrEExoJ6p8mgji0ARHbtNhfU8QgANbV7TAV1fAJQ6Xv3UQWAuvqGRqoAsP9Ak4HT2YZANKibfdq3pC0BWC0HD1EFgNa2dr1BbVcA6DjcqfN0ti8AHDl6TN9ScCIA6/gJbb2zI4FoUGd0cQUQPEkWQK2mQ8mxwClNW8GpQPg09xOEz5xlCljnzmtLRicCgQsa20QHR/HFS8yjuPXyFWYYWaVpV7WWtylw7br+66KdluxGp4G3k/ib0rabzKZU3Sq7baJ8vAJ37vqYF5PIvW7m1Syl/j7zcqp6HvQaLB9T4OGjPuYDRfDxE+OzlMkeqZ4+09V5OhJ43p/AfKYrGahkPlQWvXjJfKpVg690h64tgddDwy5Obv4eWLwZYQ4s6t62M0c2Kunde3fL/ylQ82HU/bFd9e/B5ccmxuCy69NE6H7+whnder5Gxj7+t8Je0vDaU/y9xR9oNh26k+EN/aD+wCAIgiAIgiAIgiAIglF+AgLFBquyOBfZAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE3LTAyLTA1VDIxOjM4OjAxKzAxOjAwuUvtZAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNy0wMi0wNVQyMTozODowMSswMTowMMgWVdgAAABGdEVYdHNvZnR3YXJlAEltYWdlTWFnaWNrIDYuNy44LTkgMjAxNi0wNi0xNiBRMTYgaHR0cDovL3d3dy5pbWFnZW1hZ2ljay5vcmfmvzS2AAAAGHRFWHRUaHVtYjo6RG9jdW1lbnQ6OlBhZ2VzADGn/7svAAAAGHRFWHRUaHVtYjo6SW1hZ2U6OmhlaWdodAA1MTLA0FBRAAAAF3RFWHRUaHVtYjo6SW1hZ2U6OldpZHRoADUxMhx8A9wAAAAZdEVYdFRodW1iOjpNaW1ldHlwZQBpbWFnZS9wbmc/slZOAAAAF3RFWHRUaHVtYjo6TVRpbWUAMTQ4NjMyNzA4MUKR2oMAAAATdEVYdFRodW1iOjpTaXplADQuNTlLQkKTsW/sAAAAa3RFWHRUaHVtYjo6VVJJAGZpbGU6Ly8uL3VwbG9hZHMvY2FybG9zcHJldmkvMkpTVkU4Sy8xMTMyLzE0ODYzNDg1MzItbXVzaWMtcGxheS1wYXVzZS1jb250cm9sLWdvLWFycm93XzgwNDU4LnBuZzaWVf8AAAAASUVORK5CYII='
        self.next2='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'
        self.voltar2='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'
        self.pausar2='iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAMAAAD04JH5AAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAASNQTFRFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////6B0ivQAAAF90Uk5TAAEKEQ4EFBYTCSKEv8zNx6ZIBxl40dTQumtL1f3xkhAyxfz6Jt37BbYG6TF7+Vgd3P5mC6wu648V0+2YAxfPEtLLvKXoMG73UICpD0nW84wnt6gldsHOnkVXq8qjTw1WaA+eAAAAAWJLR0Rgxbd8EAAAAAlwSFlzAAAAygAAAMoBawMUsgAAAW1JREFUeNrtmVlPwkAYRUEUi4AiblVQNgUVFXEFN8Rdcd/3/v9/oYkPnbbfA8GJxOSc55u5Z9L2pdfnAwAAAAAAAAD4F/g7AgqdXXIm2G1jhHTW94Qj0V6bvlh/3BMaGIwMDduMmKOGNoGxRNJyMj6RcmXSmawrkzMnNfWnpywP+XDBef+MN2NNB7X0z8SEs63ZoiM0lxQy8wtaBEqLkkB5Sc0sR6SMtRJvtVRldU08fN2vZCpVMRMN6BAoboiHb24pme2EmNnR8iH8RqCGAAIIIIAAAggggAACCCCAAAIIIIAAAggggAAC7RZo+99yLQJNDRa7YqaearlVoZnJJrQnCuwXWi1VkUerg0NH6CgvZI5PdPTLs1321LmeGqYgcNbQI+A/vyi7jr68cj/d65uc+/63JT393wZ39w9VZZZ9fHr2LsPBl9e6Mu++vX9ouv+PwmdFGaZr8rsVTykDd0PL+wcAAAAAAAAA8Bd8AX2547aKFgWaAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE3LTAyLTA1VDIxOjM4OjAyKzAxOjAwiKP3+QAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNy0wMi0wNVQyMTozODowMiswMTowMPn+T0UAAABGdEVYdHNvZnR3YXJlAEltYWdlTWFnaWNrIDYuNy44LTkgMjAxNi0wNi0xNiBRMTYgaHR0cDovL3d3dy5pbWFnZW1hZ2ljay5vcmfmvzS2AAAAGHRFWHRUaHVtYjo6RG9jdW1lbnQ6OlBhZ2VzADGn/7svAAAAGHRFWHRUaHVtYjo6SW1hZ2U6OmhlaWdodAA1MTLA0FBRAAAAF3RFWHRUaHVtYjo6SW1hZ2U6OldpZHRoADUxMhx8A9wAAAAZdEVYdFRodW1iOjpNaW1ldHlwZQBpbWFnZS9wbmc/slZOAAAAF3RFWHRUaHVtYjo6TVRpbWUAMTQ4NjMyNzA4MtuYizkAAAATdEVYdFRodW1iOjpTaXplADMuMTRLQkJR/C9/AAAAZ3RFWHRUaHVtYjo6VVJJAGZpbGU6Ly8uL3VwbG9hZHMvY2FybG9zcHJldmkvMkpTVkU4Sy8xMTMyLzE0ODYzNDg1MzQtbXVzaWMtcGF1c2Utc3RvcC1jb250cm9sLXBsYXlfODA0NTkucG5n/HrMrgAAAABJRU5ErkJggg=='
       
        self.continuar2='iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAMAAAD04JH5AAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAO1QTFRFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////bojwyQAAAE10Uk5TAAcSAkBeXFocC1FdHqYzBa/79Uzd/eHXQgGy+k3iVgPsbPSHDZ4WsyL+xTHV/FfWNtEwviyp+Y8T83nqYgbeT9A7TtKgLq5L3BEXCURh67RIAAAAAWJLR0ROGWFx3wAAAAlwSFlzAAE69gABOvYBOrFXOgAAAfNJREFUeNrt2mdPAkEQxvFDbBQ7YAFEsaKi2DsqFlDY7/919BXs3t3uzpHMTGLmebth+SXwzyWEIJDJZDKZTCaTyWQymbnUxBgvSk9OTeubmR0eZbI5/SSXzXjuys/NJwcsLKolfcsro/sKRf2kWMj7AKXVtfXEgA1lrFzR7jOPSn6Aqm7WeAFqazvFC1D1nV1egCrv7fMCVPHgkBegGkfHvAClTuA54gAS5IgEgOeIBQDniAaA5ogHAOaICIDliAkA5YgLAOSIDPDniA3w5ogO8OWID1BNZ44EAHeOFABnjjQAR45EAHuOVABrjmQAW450AMvTkRAQnyMlIDZHWoCqntZ4AdEcqQGRHMkB4RzpAaEcGQBmjhwApc5azIDzC96P4PKK90t4rV9ED7i5vQs4AfcP5u+d1IDHp+eAE9B+4X0Yvb6xPo6N/BgAZn70gFB+5IBwftSASH7EgGh+tICY/CgBsfkRAuLzowNY8iMD2PKjAljzIwLY86MBOPKjADjzIwC488MHePJDB/jywwZ480MG+PPDBQDywwSA8kMEwPLDAwDzQwNA88MCgPNDArQ7vH9ieYfnhwL4+Ez69n+Ar0ZZX707uq/X1E+aPR8g9Z38/YN0q1PR1/0ZHvUHxlFn0B/jfplMJpPJZDKZTCb73/sF5ilu41YT4EIAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDMtMTdUMDg6MjM6MTErMDA6MDBWEAnoAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTAzLTE3VDA4OjIzOjExKzAwOjAwJ02xVAAAAEZ0RVh0c29mdHdhcmUASW1hZ2VNYWdpY2sgNi43LjgtOSAyMDE5LTAyLTAxIFExNiBodHRwOi8vd3d3LmltYWdlbWFnaWNrLm9yZ0F74sgAAAAYdEVYdFRodW1iOjpEb2N1bWVudDo6UGFnZXMAMaf/uy8AAAAYdEVYdFRodW1iOjpJbWFnZTo6aGVpZ2h0ADUxMsDQUFEAAAAXdEVYdFRodW1iOjpJbWFnZTo6V2lkdGgANTEyHHwD3AAAABl0RVh0VGh1bWI6Ok1pbWV0eXBlAGltYWdlL3BuZz+yVk4AAAAXdEVYdFRodW1iOjpNVGltZQAxNTg0NDMzMzkxdi/ergAAABN0RVh0VGh1bWI6OlNpemUAMy4xMUtCQmYi300AAABGdEVYdFRodW1iOjpVUkkAZmlsZTovLy4vdXBsb2Fkcy81Ni9jUm1pd09OLzIyNDgvcGxheV9wYXVzZV9pY29uXzEzNzI5OC5wbmdXx59NAAAAAElFTkSuQmCC'

        self.auto2='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'
    
        self.stop2='iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAMAAAD04JH5AAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAMBQTFRFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////C4UJAgAAAD50Uk5TAAMNExIKATibx8/Ovn4fB3rp/dFDa/TZLx3XoFn44SOO8pj1PZmN8VXgIhvUBmDWKubMPAQxhMS3ZhwCFAlAihaqAAAAAWJLR0Q/PmMwdQAAAAlwSFlzAAAAygAAAMoBawMUsgAAANhJREFUeNrt2VUSwlAQBdEHBAsSSHB3d9fsf1mwhUwNRVH02cDt7xljAAAAAAAAfkIoHAnIisYU5+OJpB1QKp3Jau07ubwv4HoFpYBiSbL/Vq6o7Fdrwn3frzsaAY2mOKDV1gjoiPf9blwjoCcP6A80AoYEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBDw9wFfP9eP5AFjlYfFRP6ymc40AuYLcUBvqRFgVl3h/nqjsm+Wxa1k3t3tdfaNORxPZy8g+3K9ae2/3cOPgKyn4vMaAAAAAADgo14R3FaANHzt5gAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNy0wMi0wNVQyMTozNzo1NCswMTowMFKYlyoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTctMDItMDVUMjE6Mzc6NTQrMDE6MDAjxS+WAAAARnRFWHRzb2Z0d2FyZQBJbWFnZU1hZ2ljayA2LjcuOC05IDIwMTYtMDYtMTYgUTE2IGh0dHA6Ly93d3cuaW1hZ2VtYWdpY2sub3Jn5r80tgAAABh0RVh0VGh1bWI6OkRvY3VtZW50OjpQYWdlcwAxp/+7LwAAABh0RVh0VGh1bWI6OkltYWdlOjpoZWlnaHQANTEywNBQUQAAABd0RVh0VGh1bWI6OkltYWdlOjpXaWR0aAA1MTIcfAPcAAAAGXRFWHRUaHVtYjo6TWltZXR5cGUAaW1hZ2UvcG5nP7JWTgAAABd0RVh0VGh1bWI6Ok1UaW1lADE0ODYzMjcwNzS1YzLDAAAAE3RFWHRUaHVtYjo6U2l6ZQAyLjU5S0JC8GFa1gAAAGZ0RVh0VGh1bWI6OlVSSQBmaWxlOi8vLi91cGxvYWRzL2Nhcmxvc3ByZXZpLzJKU1ZFOEsvMTEzMi8xNDg2MzQ4NTM1LW11c2ljLXNxdWFyZS1zdG9wLXBsYXktcGF1c2VfODA0NTAucG5nWqR5uQAAAABJRU5ErkJggg=='
  
        self.mais2='iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAi1JREFUeJzt3bFNw0AcRvHPoUA0IOr0HoCKVViNHSwqugzADOxAkL1AKDBI0CAk23/H7/2kk9Ld2fekyIV9yTa0SbokfZLTzKMf52oXuTL9qU1yzPwb/3scYwSr0GX5zf8a3QLXN6umegET6JNcF809JLkpmnsSWwjgVDz/Wd/DXfUCVMsA4AwAzgDgDADOAOAMAM4A4AwAzgDgDADOAOAMAM4A4AwAzgDgDADOAOAMAM4A4AwAzgDgDADOAOAMAM4A4AwAzgDgDADOAOAMAM4A4AwAzgDgDADOAOAMAM4A4AwAzgDgDADOAOAMAO4rgCW/tz/1qFZ9/f8dP847aMYfL0luJ74xWrf3JPcXSR6T3BUvRsu7SrJvUvu9fdUamqzjf1RFfAqAMwA4A4AzADgDgDMAOAOAMwA4A4AzADgDgDMAOAOAMwA4A4AzADgDgDMAOAOAMwA4A4AzADgDgNslGaoXoTLDLsmhehUqc/DlUK7vl0Pfkjwl2Y/jsnJVmt2Q5DnJQ5LXpngxU6h+t/Gs76FPAXAGAGcAcAYAZwBwBgBnAHAGAGcAcAYAZwBwBgBnAHAGAGcAcAYAZwBwBgBnAHAGAGcAcAYAZwBwBgBnAHAGAGcAcAYAZwBwBgBnAHAGAGcAcAYAZwBwBgBnAHAGAGcAcAYAZwBwBgBnAHBbCKDyvIOzP2thCwFUnnfgWQsr0CY55vOr4UuO4zi3VqBN0iXpM//G9+Ncm9j8D/pXBfySyremAAAAAElFTkSuQmCC'
        self.menos2='iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAX9JREFUeJzt3DFqVFEYhuF3biSVlYWlrTYBN2CZHVi5EPdhmWWksUlnNiBYRNuUgqYUJBiLiaAQg4LeE+Y8D/zVMPDB+S7DDPOfAgAAAAAAAAAAAAAAAAAAAAAAAAAAAADG2Nzy2uPqafWw2l8nDv/Y1+pj9bb68Cdv2FQvqrPqyuzUnF2f7W8f+vvV8R0Iav7vHF+f9S/2qzd3IJxZZ06vz7y9tl5Vz2MWj6oH1etN9aR6V90bGom1XVYHe9XL6tngMKxvqb4s1eHoJAxzuKk+tf08YD6fN9W3bv9BiN11tWn7tYBJLaMDMJYCTE4BJqcAk1OAySnA5BRgcgowOQWYnAJMTgEmpwCTU4DJKcDkFGByS/4PMLOrpboYnYJhLpbqfHQKhjlfqpPRKRjmxGLIvC6rg6V6Xx0NDsP6jtqefbVdFDxt/NKiWXk59GfWw+eYG9fDf3BBxO7OjRdEuCJmt/31FTEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwFq+A8j+85y4Q0QjAAAAAElFTkSuQmCC'
    

